[build-system]
requires = ["scikit-build-core[pyproject]>=0.8.0", "pybind11"]
build-backend = "scikit_build_core.build"

[project]
name = "ember"
version = "0.1.0"
description = "deep learning library"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "hypothesis>=6.138.16",
    "mypy>=1.18.1",
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-env>=1.1.5",
]

# ----------------------------
# Tool Configurations
# ----------------------------

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.9
target-version = "py39"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.mypy]
# Global settings
python_version = "3.11"
strict = true                       # Enables all strict type checks
ignore_missing_imports = true       # Skip errors for untyped third-party packages
implicit_reexport = true            # Allow re-exporting symbols from imports
warn_unused_configs = true          # Warn about unused mypy configs

# Module-specific overrides (tests)
[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_decorators = false  # Allow untyped decorators in tests
implicit_reexport = true
